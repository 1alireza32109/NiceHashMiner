<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NHM.Wpf.Windows.Settings.Controls"
             xmlns:conv="clr-namespace:NHM.Wpf.ViewModels.Converters"
             xmlns:Pages="clr-namespace:NHM.Wpf.Windows.Settings.Pages" x:Class="NHM.Wpf.Windows.Settings.Controls.SettingsContainer"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <conv:NulBoolToVisibilityConverter x:Key="Converter" />
    </UserControl.Resources>

    <StackPanel Margin="10"
                DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SettingsContainer}}}"
                x:Name="LayoutRoot">
        <StackPanel Orientation="Horizontal">
            <!-- When the Enabled property is bound, we show a checkbox with a title. Otherwise, just a title -->
            <!-- It would be easier to always use the TextBlock for title, but using CheckBox allows toggling by clicking the title -->
            <CheckBox Margin="0,0,10,0" 
                      IsChecked="{Binding Enabled}" 
                      Visibility="{Binding Enabled, Converter={StaticResource Converter}}"
                      IsEnabled="True" 
                      Content="{Binding Title}"/>
            <TextBlock Text="{Binding Title}"
                       Visibility="{Binding Enabled, Converter={StaticResource Converter}, ConverterParameter=1}">
                <TextBlock.Style>
                    <!-- This extra boilerplate is needed for TextBlock to look disabled -->
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>
        <TextBlock Text="{Binding Description}" FontWeight="Light" FontSize="10" TextWrapping="Wrap" Margin="5">
            <TextBlock.Style>
                <!-- This extra boilerplate is needed for TextBlock to look disabled -->
                <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Grid IsEnabled="{Binding Enabled}" Margin="10,0">
            <!-- The data context sets all children's data contexts to the settings page, so binding can be done there -->
            <StackPanel x:Name="ChildrenStackPanel" 
                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Pages:ISettingsPage}}}" />
        </Grid>
    </StackPanel>
</UserControl>
