<UserControl x:Class="NHM.Wpf.Views.Benchmark.ComputeDeviceItem.ComputeDeviceItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NHM.Wpf.Views.Benchmark.ComputeDeviceItem"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}" x:Key="TextBoxCol" BasedOn="{StaticResource BaseUbuntuTextBlock}">
            <Setter Property="LineHeight" Value="1.5" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{StaticResource TextColorBrush}" />

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ToggleButton}" x:Key="HiddenToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border
                            x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style TargetType="{x:Type ToggleButton}" x:Key="TextBoxToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border
                            x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="{StaticResource TextColorBrush}" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
                </Trigger>

                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="90" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Foreground" Value="{StaticResource TextColorBrush}" />
                    <Setter Property="LineHeight" Value="1.57" />
                    <Setter Property="TextAlignment" Value="Center" />
                </Style>
            </Style.Resources>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="TextBoxButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border
                            x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="{StaticResource UbuntuFontFamily}"/>
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Foreground" Value="{StaticResource TextColorBrush}" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition  Height="50"/>
            <RowDefinition  Height="Auto"/>
        </Grid.RowDefinitions>
        <ToggleButton Grid.Row="0" Style="{DynamicResource HiddenToggleButton}" x:Name="AlgorithmsGridToggleButtonHidden" Click="DropDownAlgorithms_Button_Click">
            <Grid Width="720" Height="40">
                <Border BorderBrush="#eeeeee" BorderThickness="1" CornerRadius="4" Background="White">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="0.01" Direction="10" Opacity="0.1"/>
                    </Border.Effect>
                </Border>
                <Grid Background="Transparent" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal" >
                        <TextBlock Style="{DynamicResource TextBoxCol}" Foreground="{StaticResource Gray1ColorBrush}" Text="{Binding Dev.NameCount}" Margin="16,0,0,0"/>
                        <TextBlock Style="{DynamicResource TextBoxCol}" Text="{Binding Dev.Name}" Margin="9,0,0,0"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Orientation="Horizontal" >
                        <TextBlock Style="{DynamicResource TextBoxCol}" Text="{Binding AlgosEnabled}" Margin="0,0,54,0"/>
                        <TextBlock Style="{DynamicResource TextBoxCol}" Text="{Binding AlgosBenchmarked}" Margin="0,0,54,0"/>
                        <CheckBox Style="{StaticResource NHMSwitch}"
                                  x:Name="EnableDisableCheckBox"
                                  IsChecked="{Binding Enabled}"
                                  Margin="0,0,16,0" />
                        <!--TODO add context menu and all that-->
                        <ToggleButton Style="{StaticResource MenuDropdownButton}"
                                    Click="Action_Button_Click"
                                    Margin="0,0,16,0" />

                        <ToggleButton x:Name="AlgorithmsGridToggleButton" Content="&#xF105;" Style="{DynamicResource TextBoxToggleButton}" Click="DropDownAlgorithms_Button_Click" Margin="0,0,16,0" />
                    </StackPanel>
                </Grid>
            </Grid>
        </ToggleButton>
        
        
        <Grid Grid.Row="1" x:Name="AlgorithmsGrid" Background="Transparent" Visibility="Collapsed" Margin="0,20,0,0">
            <!--TODO ALGORITHMS HERE-->
            <!--CHECK IF WE NEED SCROLL VIEWER-->
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Style="{DynamicResource TextBoxButton}" Content="ALGORITHM" Click="SortAlgorithmButtonClick"/>
                <Button Grid.Column="1" Style="{DynamicResource TextBoxButton}" Content="MINER" Click="SortMinerButtonClick" />
                <Button Grid.Column="2" Style="{DynamicResource TextBoxButton}" Content="SPEED" Click="SortSpeedButtonClick" />
                <Button Grid.Column="3" Style="{DynamicResource TextBoxButton}" Content="BTC / 24H" Click="SortPayingButtonClick" />
                <Button Grid.Column="4" Style="{DynamicResource TextBoxButton}" Content="STATUS" Click="SortStatusButtonClick" />
                <StackPanel Grid.Column="5" Orientation="Horizontal">
                    <Button Style="{DynamicResource TextBoxButton}" Content="SELECT / UNSELECT ALL" Click="SortEnabledButtonClick" />
                    <CheckBox Style="{StaticResource NHMSwitch}"
                              Margin="8,0,0,0" />
                </StackPanel>
            </Grid>
            <StackPanel Grid.Row="1">
                <ItemsControl ItemsSource="{Binding AlgorithmSettingsCollection}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:AlgorithmItem DataContext="{Binding .}" Margin="0,8,0,0" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Separator Margin="0,16,0,20" />
            </StackPanel>
            
        </Grid>
        
    </Grid>
</UserControl>
